formatVersion: 1
inputs:
  NbreNode:
    description: Nombre de kubernetes nodes
    type: number
    default: 2
    minimum: 1
    maximum: 4
  rootPasswd:
    description: Password root de la VM master K8S.
    type: string
resources:
  K8S_Master:
    type: Cloud.Machine
    metadata:
      layoutPosition:
        - 1
        - 1
    properties:
      image: CentOS
      flavor: Medium # 2 vCPU
      customizationSpec: Linux
      networks:
        - network: '${resource.Cloud_Network_1.id}'
          assignment: static
      cloudConfig: |
        #cloud-config
        runcmd:
          - touch /etc/cloud/cloud-init.disabled
          - cd /tmp
          - curl -O https://raw.githubusercontent.com/ahugla/vRA/master/SoftwareComponents/Kubernetes-kubeadm/K8S-prepare.sh
          - curl -O https://raw.githubusercontent.com/ahugla/vRA/master/SoftwareComponents/Kubernetes-kubeadm/K8S-MasterConfig.sh
          - chmod 755 K8S-prepare.sh
          - chmod 755 K8S-MasterConfig.sh
          - /tmp/K8S-prepare.sh
          - /tmp/K8S-MasterConfig.sh
          - rm -f K8S-prepare.sh
          - rm -f K8S-MasterConfig.sh
          
  K8S_Nodes:
    type: Cloud.Machine
    dependsOn:
      - K8S_Master
    metadata:
      layoutPosition:
        - 1
        - 2
    properties:
      image: CentOS
      flavor: Medium # 2 vCPU
      count: '${input.NbreNode}'
      customizationSpec: Linux
      networks:
        - network: '${resource.Cloud_Network_1.id}'
          assignment: static
      cloudConfig: |
        #cloud-config
        runcmd:
          - touch /etc/cloud/cloud-init.disabled    # evite d'executer cloud-init au reboot
          - yum install -y sshpass
          
          - echo "resource.K8S_Master.address = " ${resource.K8S_Master.address}                          # Recupere souvent l'IP flannel =>  NO OK
          - echo "resource.K8S_Master.networks.address = " ${resource.K8S_Master.networks.address}        # Tableau des IPs des vnics  =>  NO OK
          - echo "resource.K8S_Master.networks.address[0] = " ${resource.K8S_Master.networks.address[0]}  # Premiere IP  =>  OK
          
          - cd /tmp
          - curl -O https://raw.githubusercontent.com/ahugla/vRA/master/SoftwareComponents/Kubernetes-kubeadm/K8S-prepare.sh
          - curl -O https://raw.githubusercontent.com/ahugla/vRA/master/SoftwareComponents/Kubernetes-kubeadm/K8S-JoinCluster.sh
          - chmod 755 K8S-prepare.sh
          - chmod 755 K8S-JoinCluster.sh
          - /tmp/K8S-prepare.sh
          - /tmp/K8S-JoinCluster.sh ${resource.K8S_Master.networks.address[0]}  ${input.rootPasswd}
          - rm -f K8S-prepare.sh
          - rm -f K8S-JoinCluster.sh
          
  Cloud_Network_1:
    type: Cloud.Network
    metadata:
      layoutPosition:
        - 2
        - 0
    properties:
      networkType: existing
      constraints:
        - tag: 'netprofile:nsx'
